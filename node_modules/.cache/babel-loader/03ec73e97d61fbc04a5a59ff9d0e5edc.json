{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\arshad\\\\React-program\\\\todo-app\\\\src\\\\component\\\\TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Todo from './Todo';\nimport TodoForm from './TodoForm';\n\nconst TodoList = () => {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n\n  const addTodo = todo => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n  };\n\n  const updateTodo = (todoId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    setTodos(prev => prev.map(item => item.id === todoId ? newValue : item));\n  };\n\n  const removeTodo = id => {\n    const removeArr = [...todos].filter(todo => todo.id !== id);\n    setTodos(removeArr);\n  };\n\n  const completeTodo = id => {\n    let upadatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n\n      return todo;\n    });\n    setTodos(upadatedTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"What's the plan for today\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      onSubmit: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Todo, {\n      todos: todos,\n      completeTodo: completeTodo,\n      removeTodo: removeTodo,\n      updateTodo: updateTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TodoList, \"ZATHeV9x55jFrDOww2hwcxQ3V1U=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["D:/arshad/React-program/todo-app/src/component/TodoList.js"],"names":["React","useState","Todo","TodoForm","TodoList","todos","setTodos","addTodo","todo","text","test","newTodos","updateTodo","todoId","newValue","prev","map","item","id","removeTodo","removeArr","filter","completeTodo","upadatedTodos","isComplete"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAmBL,QAAQ,CAAC,EAAD,CAAjC;;AACA,QAAMM,OAAO,GAACC,IAAI,IAAG;AACjB,QAAG,CAACA,IAAI,CAACC,IAAN,IAAc,QAAQC,IAAR,CAAaF,IAAI,CAACC,IAAlB,CAAjB,EAAyC;AACrC;AACH;;AACD,UAAME,QAAQ,GAAC,CAACH,IAAD,EAAO,GAAGH,KAAV,CAAf;AAEAC,IAAAA,QAAQ,CAACK,QAAD,CAAR;AAEH,GARD;;AASA,QAAMC,UAAU,GAAE,CAACC,MAAD,EAASC,QAAT,KAAoB;AAClC,QAAG,CAACA,QAAQ,CAACL,IAAV,IAAkB,QAAQC,IAAR,CAAaI,QAAQ,CAACL,IAAtB,CAArB,EAAiD;AAC7C;AACH;;AACDH,IAAAA,QAAQ,CAACS,IAAI,IAAGA,IAAI,CAACC,GAAL,CAASC,IAAI,IAAGA,IAAI,CAACC,EAAL,KAAUL,MAAV,GAAkBC,QAAlB,GAA2BG,IAA3C,CAAR,CAAR;AAEH,GAND;;AAOA,QAAME,UAAU,GAACD,EAAE,IAAE;AACjB,UAAME,SAAS,GAAC,CAAC,GAAGf,KAAJ,EAAWgB,MAAX,CAAkBb,IAAI,IAAEA,IAAI,CAACU,EAAL,KAAYA,EAApC,CAAhB;AACAZ,IAAAA,QAAQ,CAACc,SAAD,CAAR;AACH,GAHD;;AAKA,QAAME,YAAY,GAAEJ,EAAE,IAAG;AACrB,QAAIK,aAAa,GAAClB,KAAK,CAACW,GAAN,CAAUR,IAAI,IAAE;AAC9B,UAAGA,IAAI,CAACU,EAAL,KAAUA,EAAb,EAAgB;AACZV,QAAAA,IAAI,CAACgB,UAAL,GAAgB,CAAChB,IAAI,CAACgB,UAAtB;AACH;;AACD,aAAOhB,IAAP;AACH,KALiB,CAAlB;AAMAF,IAAAA,QAAQ,CAACiB,aAAD,CAAR;AACH,GARD;;AASA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEhB;AAApB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEF,KAAb;AACI,MAAA,YAAY,EAAEiB,YADlB;AAEI,MAAA,UAAU,EAAEH,UAFhB;AAGI,MAAA,UAAU,EAAEP;AAHhB;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CA3CD;;GAAMR,Q;;KAAAA,Q;AA6CN,eAAeA,QAAf","sourcesContent":["import React,{useState} from 'react';\r\nimport Todo from './Todo';\r\nimport TodoForm from './TodoForm';\r\n\r\n\r\nconst TodoList = () => {\r\n    const [todos, setTodos]= useState([]);\r\n    const addTodo=todo =>{\r\n        if(!todo.text || /^\\s*$/.test(todo.text)){\r\n            return\r\n        }\r\n        const newTodos=[todo, ...todos];\r\n        \r\n        setTodos(newTodos);\r\n       \r\n    }\r\n    const updateTodo =(todoId, newValue)=>{\r\n        if(!newValue.text || /^\\s*$/.test(newValue.text)){\r\n            return\r\n        }\r\n        setTodos(prev =>prev.map(item=>(item.id===todoId? newValue:item)))\r\n\r\n    }\r\n    const removeTodo=id=>{\r\n        const removeArr=[...todos].filter(todo=>todo.id !== id)\r\n        setTodos(removeArr);\r\n    }\r\n\r\n    const completeTodo= id =>{\r\n        let upadatedTodos=todos.map(todo=>{\r\n            if(todo.id===id){\r\n                todo.isComplete=!todo.isComplete\r\n            }\r\n            return todo\r\n        })\r\n        setTodos(upadatedTodos);\r\n    }\r\n    return (\r\n        <div className=\"todo-app\">\r\n            <h1>What's the plan for today</h1>\r\n            <TodoForm onSubmit={addTodo}/>\r\n            <Todo todos={todos}\r\n                completeTodo={completeTodo} \r\n                removeTodo={removeTodo}\r\n                updateTodo={updateTodo}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList;\r\n"]},"metadata":{},"sourceType":"module"}